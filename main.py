import telebot
from telebot import types
import t0ken
import random
import time

bot = telebot.TeleBot(t0ken.TOKKEN())

message_count = {}


@bot.message_handler(commands=['start'])
# /start –Ω–∞ –≤–≤–æ–¥...
def start(message):
    if message.chat.type == 'private':
        markup_buttons1 = types.ReplyKeyboardMarkup(resize_keyboard=True)  # –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        btn1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")  # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
        markup_buttons1.add(btn1)  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏

        bot.send_message(message.from_user.id,
                         f"üëã–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.username}! –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç funny bot!(–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç "
                         f"–Ω–∞ —ç—Ç–∞–ø–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏). –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –ø–æ–º–µ–Ω—è–π—Ç–µ —Ç–æ–∫–µ–Ω –∏ –Ω–∞–∑–Ω–∞—á—å—Ç–µ –±–æ—Ç–∞ '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º' "
                         f"–≤ –≥—Ä—É–ø–ø–µ",
                         reply_markup=markup_buttons1)  # –¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.send_photo(message.from_user.id,
                       'https://cameralabs.org/media/lab16/post/10-16/11/fotografii-dikoy-prirody_24.jpg',
                       reply_markup=markup_buttons1)


# –§—É–∫–Ω—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /sum_bot –≤ –±–µ—Å–µ–¥–µ
@bot.message_handler(commands=['sum_group'])
def sum(message):
    if message.chat.type == 'group' or message.chat.type == 'supergroup':
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ")
        bot.register_next_step_handler(message, get_first_number_group)  # –ø–µ—Ä–µ–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è message


def get_first_number_group(message):
    if message.chat.type == 'group' or message.chat.type == 'supergroup':
        try:
            global a
            a = int(message.text)
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ")
            bot.register_next_step_handler(message, get_second_number_group)  # –ø–µ—Ä–µ–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è message
        except Exception as e:
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ")


def get_second_number_group(message):
    if message.chat.type == 'group' or message.chat.type == 'supergroup':
        try:
            global b
            b = int(message.text)
            bot.send_message(message.chat.id, str(a + b))
        except Exception as e:
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ")


# –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è —Å—á–∏—Ç–∞–µ—Ç —Å—É–º–º—É –¥–≤—É—Ö —á–∏—Å–µ–ª –Ω–∞ –∫–æ–º–∞–Ω–¥—É /sum, –æ—Ç–≤–µ—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç –≤ –ª—Å
@bot.message_handler(commands=['sum'])
def sum(message):
    if message.chat.type == 'private':
        bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ")
        bot.register_next_step_handler(message, get_first_number)  # —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ ‚Äì —Ñ—É–Ω–∫—Ü–∏—è get_first_number


def get_first_number(message):
    if message.chat.type == 'private':
        try:
            global a
            a = int(message.text)
            bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ")
            bot.register_next_step_handler(message, get_second_number)
        except Exception as e:
            bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ")


def get_second_number(message):
    if message.chat.type == 'private':
        try:
            global b
            b = int(message.text)
            bot.send_message(message.from_user.id, str(a + b))
        except Exception as e:
            bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ")


# message.chat.id - –≤ —á–∞—Ç–µ
# message.from_user.id - –≤ –ª–∏—á–∫—É


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–∞–Ω–∞ –∑–∞ –∑–∞–ø—Ä–µ—Ç–∫–∏
@bot.message_handler(content_types=['text'])
def zapretki(message):
    chat_id = message.chat.id
    user_id = message.from_user.id

    arr_zapretki = ["—Ä–µ–∞–ª—å–Ω–æ", "–æ–∫", "–≤–Ω–∞—Ç—É—Ä–µ", "–ª–∞–¥–Ω–æ", "–ª–∞–Ω", "—Ä–µ–∞–ª"]
    arr_mat = ["–ê—Ö—É–µ–Ω–Ω–æ –∑–∞—à–ª–æ, —Å–ø—Å"]
    arr_zapretki_message = ["–°–ª–µ–¥–∏ –∑–∞ —è–∑—ã–∫–æ–º", "–ó–∞–≤–∞–ª–∏ —Å–≤–æ–π –µ–±–ª–µ—Ç", "–ù–∞—á–Ω–∏ —á–∏—Ç–∞—Ç—å –∫–Ω–∏–≥–∏, —É–±–ª—é–¥–æ–∫",
                            "–ü–æ–≤—ã—à–∞–π —Å–≤–æ–π —Å–ª–æ–≤–∞—Ä–Ω—ã–π –∑–∞–ø–∞—Å", "–Ø –∑–∞–ø—Ä–µ—â–∞—é —Ç–µ–±–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–µ–ª–µ–≥—Ä–∞–º–æ–º"]
    file = open("list.txt", 'r', encoding='utf-8')
    arr_list_mat = file.readlines()

    for i in range(len(arr_list_mat)):  # —É–±—Ä–∞—Ç—å \n
        arr_list_mat[i] = arr_list_mat[i].replace("\n", "")
    for i in range(len(arr_list_mat)):
        if arr_list_mat[i] in message.text.lower():
            bot.send_message(message.chat.id, arr_list_mat[random.randint(0, len(arr_list_mat) - 1)])
    file.close()
    for i in range(len(arr_zapretki)):
        if arr_zapretki[i] in message.text.lower().split():
            # chat_id = message.chat.id
            # user_id = message.from_user.id
            chat_member = bot.get_chat_member(chat_id, user_id)
            if chat_member.status in ["administrator", "creator"]:
                bot.send_message(message.chat.id, "–û–Ω —Å—É–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!")
            else:
                if user_id not in message_count:
                    message_count[user_id] = 1
                else:
                    message_count[user_id] += 1
                if message_count[user_id] == 3:
                    message_count[user_id] = 0
                    for i in range(3, 0, -1):
                        bot.send_message(message.chat.id, f"–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —á–µ—Ä–µ–∑ {int(i)}...")
                        time.sleep(1)

                    bot.send_message(message.chat.id, "–í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞ 60 —Å–µ–∫—É–Ω–¥! –ú–µ–Ω—å—à–µ –ø–∏–∑–¥–µ—Ç—å –Ω–∞–¥–æ ")
                    bot.restrict_chat_member(chat_id, user_id, until_date=int(time.time()) + 60,
                                             can_send_messages=False)
                    break
                bot.send_message(message.chat.id,
                                 f"{message.from_user.username}, –≤—ã –±—É–¥–µ—Ç–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã, –ø–æ—Å–ª–µ –Ω–∞–ø–∏—Å–∞–Ω–∏—è {int(3)}—Ö –∑–∞–ø—Ä–µ—Ç–Ω—ã—Ö —Å–ª–æ–≤–∞")
                bot.send_message(message.chat.id,
                                 arr_zapretki_message[random.randint(0, len(arr_zapretki_message) - 1)])


@bot.message_handler(commands=['help'])
def help(message):
    if message.chat.type == 'private':
        bot.send_message(message.from_user.id,
                         "–î–ª—è –Ω–∞—á–∞–ª—ã —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º,–¥–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ –≥—Ä—É–ø–ø—É –∏ –Ω–∞–∑–Ω–∞—á—å—Ç–µ '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º'")


bot.polling(none_stop=True, interval=0)  # –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ —á–∞—Å—Ç—å

# –î–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–ø–∏—Å—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É –≤ –∫–æ–Ω—Å–æ–ª—å: py main.py
